version: '3.8'

services:

  nginx:
    container_name: ${NAMESPACE}_nginx
    image: nginx:${NGINX_VERSION}-alpine
    depends_on:
      - php
    ports:
      - "80:80"
    environment:
      SHOPURI: ${SHOPURI}
      TZ: ${TZ}
    command: '/usr/sbin/nginx -g "daemon off; error_log /dev/stderr info;"'
    networks:
      default:
        aliases:
          - ${SHOPURI}
    volumes:
      - .docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - .docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf:ro
      - app_data:/var/www/html:delegated

  php:
#    build:
#      context: ./.docker/php
#      args:
#        PHP_VERSION_SET: ${PHP_VERSION_SET}
    container_name: ${NAMESPACE}_php
    image: osioaliu/php:${PHP_VERSION_SET}-fpm-alpine
    sysctls:
      net.core.somaxconn: 65536
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      COMPOSER_CACHE_DIR: /home/www-data/.composer
    user: ${UID_GID}
    restart: on-failure
    volumes:
      - redis_data_socket:/var/run/redis
      - app_data:/var/www/html:delegated
      - composer_cache:/home/www-data/.composer:delegated
      - ${HOME}/.ssh:/home/www-data/.ssh:delegated
      - .docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - .docker/php/config/php-ini-overrides.ini:/usr/local/etc/php/conf.d/php-ini-overrides.ini:ro
      - .docker/php/config/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf:ro

  db:
    container_name: ${NAMESPACE}_db
    image: mariadb:${MARIADB_VERSION}
    environment:
      TZ: ${TZ}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    healthcheck:
      test: 'mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD}'
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - db_data:/var/lib/mysql/
      - .docker/mysql/db_dumps:/docker-entrypoint-initdb.d
      - .docker/mysql/config/my.cnf:/etc/mysql/my.cnf

  redis:
    container_name: ${NAMESPACE}_redis
    image: redis:${REDIS_VERSION}
    sysctls:
      net.core.somaxconn: '1024'
    entrypoint: redis-server
    command: [ "/etc/redis/redis.conf", "--appendonly", "yes" ]
    environment:
      TZ: ${TZ}
    healthcheck:
      test: 'redis-cli -s /var/run/redis/redis.sock ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - redis_data_socket:/var/run/redis
      - redis_data:/data
      - ./.docker/redis/config/redis.conf:/etc/redis/redis.conf:ro

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    environment:
      TZ: ${TZ}
    ports:
      - ${MAILHOG_EXTERNAL_PORT}:8025

  watchtower:
    container_name: ${NAMESPACE}_watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: ${TZ}
    command: --interval 3600

volumes:
  rabbitmq_data:
  redis_data_socket:
  db_data:
  elastic_data:
  redis_data:
  app_data:
    driver_opts:
      type: none
      o: bind
      device: ${WORKDIR}
  composer_cache:
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/.composer
